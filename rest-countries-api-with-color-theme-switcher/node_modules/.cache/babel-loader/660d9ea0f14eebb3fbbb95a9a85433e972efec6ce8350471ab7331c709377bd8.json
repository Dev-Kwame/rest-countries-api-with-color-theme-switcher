{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amen Gezoh\\\\Desktop\\\\rest-countries-api-with-color-theme-switcher\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./components/navBar\";\nimport './App.css';\nimport SearchBar from \"./components/searchbar\";\nimport ToggleButton from \"./components/button\";\nimport DropDown from \"./components/dropDown\";\nimport CountryList from \"./components/countriesList\";\nimport CountryDetails from './components/countriesDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [selectedRegion, setSelectedRegion] = useState(null);\n  const [searchCountry, setSearchCountry] = useState('');\n  const location = useLocation();\n  const countryDetails = location.state;\n  useEffect(() => {\n    document.body.className = isDarkMode ? 'dark-theme' : 'light-theme';\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  const handleRegionSelect = region => {\n    setSelectedRegion(region);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigate\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"click-button\",\n        children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n          isDarkMode: isDarkMode,\n          onToggle: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(SearchBar, {\n                  isDarkMode: isDarkMode,\n                  onSearch: setSearchCountry\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-flex\",\n                children: /*#__PURE__*/_jsxDEV(DropDown, {\n                  isDarkMode: isDarkMode,\n                  onRegionSelect: handleRegionSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CountryList, {\n              isDarkMode: isDarkMode,\n              selectedRegion: selectedRegion,\n              searchCountry: searchCountry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/country/:countryName\",\n          element: /*#__PURE__*/_jsxDEV(CountryDetails, {\n            isDarkMode: isDarkMode,\n            countryDetails: c\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"44Kh8IZBJ4Xp8U8RuZp02iCBx0w=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","useLocation","React","useState","useEffect","NavBar","SearchBar","ToggleButton","DropDown","CountryList","CountryDetails","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","selectedRegion","setSelectedRegion","searchCountry","setSearchCountry","location","countryDetails","state","document","body","className","toggleTheme","handleRegionSelect","region","children","fileName","_jsxFileName","lineNumber","columnNumber","onToggle","path","element","onSearch","onRegionSelect","c","_c","$RefreshReg$"],"sources":["C:/Users/Amen Gezoh/Desktop/rest-countries-api-with-color-theme-switcher/rest-countries-api-with-color-theme-switcher/src/App.tsx"],"sourcesContent":["\nimport {BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport React, {useState, useEffect} from \"react\";\nimport NavBar from \"./components/navBar\";\nimport './App.css';\nimport SearchBar from \"./components/searchbar\";\nimport ToggleButton from \"./components/button\";\nimport DropDown from \"./components/dropDown\";\nimport CountryList from \"./components/countriesList\";\nimport CountryDetails from './components/countriesDetails';\nimport { Country } from './components/countriesList';\n\n\n\n\n\n\n\n\n\nfunction App () {\n    const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\n    const [selectedRegion, setSelectedRegion] = useState<string | null>(null);\n    const [searchCountry, setSearchCountry] = useState<string>('');\n    const location = useLocation();\n    const countryDetails = location.state as Country | null;\n    \n\n \n\n    useEffect(() => {\n      document.body.className = isDarkMode ? 'dark-theme' : 'light-theme';\n    }, [isDarkMode]);\n\n    const toggleTheme  = () => {\n      setIsDarkMode(!isDarkMode);\n    };\n\n    const handleRegionSelect = (region: string | null) => {\n      setSelectedRegion(region);\n    };   \n\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}> \n    <div className='header'>\n    <div className=\"navigate\"><NavBar/></div>\n    <div className=\"click-button\"><ToggleButton isDarkMode={isDarkMode} onToggle={toggleTheme}/></div> \n    </div>\n\n    <Router>\n        <Routes>\n          <Route path='/' element={\n            <div>\n              <div className=\"flex\">\n                <div>\n                  <SearchBar isDarkMode={isDarkMode} onSearch={setSearchCountry} />\n                </div>\n                <div className=\"dropdown-flex\">\n                  <DropDown isDarkMode={isDarkMode} onRegionSelect={handleRegionSelect} />\n                </div>\n              </div>\n              <CountryList isDarkMode={isDarkMode} selectedRegion={selectedRegion} searchCountry={searchCountry}  />\n              \n            </div>\n          } />\n          <Route path='/country/:countryName' element={<CountryDetails isDarkMode={isDarkMode}  countryDetails={c}/> } />\n        </Routes>\n      </Router>\n     </div>\n     \n    \n   \n\n  \n   \n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}