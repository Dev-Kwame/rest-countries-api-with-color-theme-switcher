{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CountryList=_ref=>{let{isDarkMode,selectedRegion,searchCountry,countries}=_ref;const filteredCountries=countries.filter(country=>{const matchesRegion=selectedRegion&&selectedRegion!=='all'?country.region===selectedRegion:true;const matchesSearchCountry=country.name.common.toLowerCase().includes(searchCountry.toLowerCase());return matchesRegion&&matchesSearchCountry;});return/*#__PURE__*/_jsx(\"div\",{className:\"country-card\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"country-grid\",children:filteredCountries.map(country=>/*#__PURE__*/_jsx(Link,{className:\"text\",to:\"/country/\".concat(encodeURIComponent(country.name.common)),children:/*#__PURE__*/_jsxs(\"div\",{className:\"countryItem \".concat(isDarkMode?'dark':'light'),children:[/*#__PURE__*/_jsx(\"img\",{src:country.flags.png,alt:\"Flag\",className:\"countryImg\"}),/*#__PURE__*/_jsx(\"li\",{id:\"country-name\",children:country.name.common}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Population: \"}),country.population.toLocaleString()]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Region:\"}),\" \",country.region]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Capital: \"}),country.capital]})]},country.name.common)},country.name.common))})});};export default CountryList;","map":{"version":3,"names":["React","Link","jsx","_jsx","jsxs","_jsxs","CountryList","_ref","isDarkMode","selectedRegion","searchCountry","countries","filteredCountries","filter","country","matchesRegion","region","matchesSearchCountry","name","common","toLowerCase","includes","className","children","map","to","concat","encodeURIComponent","src","flags","png","alt","id","population","toLocaleString","capital"],"sources":["C:/Users/Amen Gezoh/Desktop/rest-countries-api-with-color-theme-switcher/rest-countries-api-with-color-theme-switcher/src/components/countriesList.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Country } from '../App';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n\r\n      interface CountryListProps {\r\n        isDarkMode: boolean;\r\n        selectedRegion: string | null;\r\n        searchCountry: string;\r\n        countries: Country[];\r\n      \r\n      }\r\n  \r\n\r\n\r\n      \r\n      \r\n     \r\n      \r\n  const CountryList: React.FC<CountryListProps> = ({isDarkMode, selectedRegion,searchCountry, countries}) => {\r\n    \r\n \r\n  \r\n  const filteredCountries = countries.filter((country) => {\r\n    const matchesRegion = selectedRegion && selectedRegion !== 'all' ? country.region === selectedRegion : true;\r\n\r\n    const matchesSearchCountry = country.name.common.toLowerCase().includes(searchCountry.toLowerCase());\r\n\r\n    return matchesRegion && matchesSearchCountry;\r\n  });\r\n\r\n\r\n \r\n  \r\n\r\n\r\n  return (\r\n    \r\n        <div className='country-card'>\r\n          \r\n      <ul className='country-grid'>\r\n     \r\n            {filteredCountries.map((country) =>(\r\n            <Link className='text' key={country.name.common} to={`/country/${encodeURIComponent(country.name.common)}` } \r\n       > \r\n              <div key={country.name.common }className={`countryItem ${isDarkMode ? 'dark' : 'light'}`}  >\r\n            <img src={country.flags.png} alt=\"Flag\" className='countryImg'/>\r\n             <li id='country-name'>{country.name.common}</li>\r\n              <li><span>Population: </span>{country.population.toLocaleString()}</li>\r\n              <li><span>Region:</span> {country.region}</li>\r\n              <li><span>Capital: </span>{country.capital}</li>  \r\n\r\n            \r\n              \r\n            </div> \r\n           </Link>\r\n        ))}\r\n      </ul>\r\n    \r\n      </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBA0BtC,KAAM,CAAAC,WAAuC,CAAGC,IAAA,EAA2D,IAA1D,CAACC,UAAU,CAAEC,cAAc,CAACC,aAAa,CAAEC,SAAS,CAAC,CAAAJ,IAAA,CAItG,KAAM,CAAAK,iBAAiB,CAAGD,SAAS,CAACE,MAAM,CAAEC,OAAO,EAAK,CACtD,KAAM,CAAAC,aAAa,CAAGN,cAAc,EAAIA,cAAc,GAAK,KAAK,CAAGK,OAAO,CAACE,MAAM,GAAKP,cAAc,CAAG,IAAI,CAE3G,KAAM,CAAAQ,oBAAoB,CAAGH,OAAO,CAACI,IAAI,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,aAAa,CAACU,WAAW,CAAC,CAAC,CAAC,CAEpG,MAAO,CAAAL,aAAa,EAAIE,oBAAoB,CAC9C,CAAC,CAAC,CAOF,mBAEMd,IAAA,QAAKmB,SAAS,CAAC,cAAc,CAAAC,QAAA,cAE/BpB,IAAA,OAAImB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAErBX,iBAAiB,CAACY,GAAG,CAAEV,OAAO,eAC/BX,IAAA,CAACF,IAAI,EAACqB,SAAS,CAAC,MAAM,CAA2BG,EAAE,aAAAC,MAAA,CAAcC,kBAAkB,CAACb,OAAO,CAACI,IAAI,CAACC,MAAM,CAAC,CAAI,CAAAI,QAAA,cAE1GlB,KAAA,QAA+BiB,SAAS,gBAAAI,MAAA,CAAiBlB,UAAU,CAAG,MAAM,CAAG,OAAO,CAAG,CAAAe,QAAA,eAC3FpB,IAAA,QAAKyB,GAAG,CAAEd,OAAO,CAACe,KAAK,CAACC,GAAI,CAACC,GAAG,CAAC,MAAM,CAACT,SAAS,CAAC,YAAY,CAAC,CAAC,cAC/DnB,IAAA,OAAI6B,EAAE,CAAC,cAAc,CAAAT,QAAA,CAAET,OAAO,CAACI,IAAI,CAACC,MAAM,CAAK,CAAC,cAC/Cd,KAAA,OAAAkB,QAAA,eAAIpB,IAAA,SAAAoB,QAAA,CAAM,cAAY,CAAM,CAAC,CAACT,OAAO,CAACmB,UAAU,CAACC,cAAc,CAAC,CAAC,EAAK,CAAC,cACvE7B,KAAA,OAAAkB,QAAA,eAAIpB,IAAA,SAAAoB,QAAA,CAAM,SAAO,CAAM,CAAC,IAAC,CAACT,OAAO,CAACE,MAAM,EAAK,CAAC,cAC9CX,KAAA,OAAAkB,QAAA,eAAIpB,IAAA,SAAAoB,QAAA,CAAM,WAAS,CAAM,CAAC,CAACT,OAAO,CAACqB,OAAO,EAAK,CAAC,GALtCrB,OAAO,CAACI,IAAI,CAACC,MASpB,CAAC,EAXsBL,OAAO,CAACI,IAAI,CAACC,MAYpC,CACR,CAAC,CACA,CAAC,CAEA,CAAC,CAGZ,CAAC,CAED,cAAe,CAAAb,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}