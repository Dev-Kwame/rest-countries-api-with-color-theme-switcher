{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amen Gezoh\\\\Desktop\\\\rest-countries-api-with-color-theme-switcher\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\components\\\\countriesDetails.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetails = ({\n  isDarkMode,\n  country,\n  error\n}) => {\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error fetching country data: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (!country) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No country data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this); // Handle the case when country data is not available\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      alt: \"Flag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", country.population.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Region: \", country.region]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital: \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = CountryDetails;\nexport default CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CountryDetails","isDarkMode","country","error","children","fileName","_jsxFileName","lineNumber","columnNumber","name","common","src","flags","png","alt","population","toLocaleString","region","capital","_c","$RefreshReg$"],"sources":["C:/Users/Amen Gezoh/Desktop/rest-countries-api-with-color-theme-switcher/rest-countries-api-with-color-theme-switcher/src/components/countriesDetails.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Country } from './countriesList';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface CountryDetailsprops{ \r\n  isDarkMode: boolean;\r\n  country: Country | null;\r\n  error: string | null; \r\n}\r\n\r\n\r\n\r\nconst CountryDetails: React.FC<CountryDetailsprops> = ({isDarkMode, country , error}) => {\r\n  if (error) {\r\n    return <div>Error fetching country data: {error}</div>;\r\n  }\r\n  if (!country) {\r\n    return <div>No country data available</div>; // Handle the case when country data is not available\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n     <h2>{country.name.common}</h2>\r\n      <img src={country.flags.png} alt=\"Flag\" />\r\n      <p>Population: {country.population.toLocaleString()}</p>\r\n      <p>Region: {country.region}</p>\r\n      <p>Capital: {country.capital}</p>\r\n\r\n    </div>\r\n  )\r\n \r\n    \r\n\r\n};\r\n\r\nexport default CountryDetails;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAsB1B,MAAMC,cAA6C,GAAGA,CAAC;EAACC,UAAU;EAAEC,OAAO;EAAGC;AAAK,CAAC,KAAK;EACvF,IAAIA,KAAK,EAAE;IACT,oBAAOJ,OAAA;MAAAK,QAAA,GAAK,+BAA6B,EAACD,KAAK;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACxD;EACA,IAAI,CAACN,OAAO,EAAE;IACZ,oBAAOH,OAAA;MAAAK,QAAA,EAAK;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAC/C;;EAGA,oBACET,OAAA;IAAAK,QAAA,gBACCL,OAAA;MAAAK,QAAA,EAAKF,OAAO,CAACO,IAAI,CAACC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7BT,OAAA;MAAKY,GAAG,EAAET,OAAO,CAACU,KAAK,CAACC,GAAI;MAACC,GAAG,EAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CT,OAAA;MAAAK,QAAA,GAAG,cAAY,EAACF,OAAO,CAACa,UAAU,CAACC,cAAc,CAAC,CAAC;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDT,OAAA;MAAAK,QAAA,GAAG,UAAQ,EAACF,OAAO,CAACe,MAAM;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BT,OAAA;MAAAK,QAAA,GAAG,WAAS,EAACF,OAAO,CAACgB,OAAO;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAKV,CAAC;AAACW,EAAA,GAtBInB,cAA6C;AAwBnD,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}