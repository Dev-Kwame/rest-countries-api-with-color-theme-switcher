{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amen Gezoh\\\\Desktop\\\\rest-countries-api-with-color-theme-switcher\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\components\\\\countriesDetails.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetails = ({\n  isDarkmode\n}) => {\n  _s();\n  const {\n    countryName\n  } = useParams();\n  const [countryDetails, setCountryDetails] = useState(null);\n  const [borderCountries, setBorderCountries] = useState([]);\n  const [loadingBorders, setLoadingBorders] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch country details\n        const response = await fetch(`https://restcountries.com/v3.1/name/${countryName}`);\n        const [data] = await response.json();\n        setCountryDetails(data);\n\n        // Fetch details for border countries\n        const borderCountriesDetails = await Promise.all(data.borders.map(async border => {\n          const borderResponse = await fetch(`https://restcountries.com/v3.1/alpha/${border}`);\n          const borderData = await borderResponse.json();\n          return borderData;\n        }));\n        setBorderCountries(borderCountriesDetails);\n        setLoadingBorders(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [countryName]);\n  if (!countryDetails || loadingBorders) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: `back-button ${isDarkmode ? 'dark' : 'light'}`,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faArrowLeft,\n        style: {\n          marginRight: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"Back\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"country-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"flag\",\n          src: countryDetails.flags.svg,\n          alt: \"Flag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"details-header\",\n          children: countryDetails.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country-details-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country-details-1\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Border Countries:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), ' ', borderCountries.map(borderCountry => /*#__PURE__*/_jsxDEV(Link, {\n                to: `/country/${borderCountry.name.common}`,\n                children: borderCountry.name.common\n              }, borderCountry.name.common, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryDetails, \"i01cgz92bxbiADhBc4jhBezVgi8=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetails;\nexport default CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","FontAwesomeIcon","faArrowLeft","jsxDEV","_jsxDEV","CountryDetails","isDarkmode","_s","countryName","countryDetails","setCountryDetails","borderCountries","setBorderCountries","loadingBorders","setLoadingBorders","fetchData","response","fetch","data","json","borderCountriesDetails","Promise","all","borders","map","border","borderResponse","borderData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","icon","style","marginRight","id","src","flags","svg","alt","name","common","borderCountry","_c","$RefreshReg$"],"sources":["C:/Users/Amen Gezoh/Desktop/rest-countries-api-with-color-theme-switcher/rest-countries-api-with-color-theme-switcher/src/components/countriesDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { Country } from './countriesList';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface CountryDetailsprops {\r\n  isDarkmode: boolean;\r\n}\r\n\r\nconst CountryDetails: React.FC<CountryDetailsprops> = ({ isDarkmode }) => {\r\n  const { countryName } = useParams();\r\n  const [countryDetails, setCountryDetails] = useState<Country | null>(null);\r\n  const [borderCountries, setBorderCountries] = useState<Country[]>([]);\r\n  const [loadingBorders, setLoadingBorders] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch country details\r\n        const response = await fetch(`https://restcountries.com/v3.1/name/${countryName}`);\r\n        const [data] = await response.json();\r\n        setCountryDetails(data);\r\n\r\n        // Fetch details for border countries\r\n        const borderCountriesDetails = await Promise.all(\r\n          data.borders.map(async (border: string) => {\r\n            const borderResponse = await fetch(`https://restcountries.com/v3.1/alpha/${border}`);\r\n            const borderData = await borderResponse.json();\r\n            return borderData;\r\n          })\r\n        );\r\n\r\n        setBorderCountries(borderCountriesDetails);\r\n        setLoadingBorders(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [countryName]);\r\n\r\n  if (!countryDetails || loadingBorders) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className={`back-button ${isDarkmode ? 'dark' : 'light'}`}>\r\n        <FontAwesomeIcon icon={faArrowLeft} style={{ marginRight: '8px' }} />\r\n        Back\r\n      </Link>\r\n\r\n      <article className=\"country-details\">\r\n        <div>\r\n          <img id=\"flag\" src={countryDetails.flags.svg} alt=\"Flag\" />\r\n        </div>\r\n        <div>\r\n          <h2 id=\"details-header\">{countryDetails.name.common}</h2>\r\n          <div className=\"country-details-wrapper\">\r\n            <div className=\"country-details-1\">\r\n              <p>\r\n                <span>Border Countries:</span>{' '}\r\n                {borderCountries.map((borderCountry) => (\r\n                  <Link key={borderCountry.name.common} to={`/country/${borderCountry.name.common}`}>\r\n                    {borderCountry.name.common}\r\n                  </Link>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}