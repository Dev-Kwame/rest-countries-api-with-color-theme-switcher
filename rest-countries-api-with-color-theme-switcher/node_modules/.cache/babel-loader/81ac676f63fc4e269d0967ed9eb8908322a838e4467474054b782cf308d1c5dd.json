{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const CountryList=_ref=>{let{isDarkMode,selectedRegion,searchCountry}=_ref;const[countries,setCountries]=useState([]);useEffect(()=>{const fetchData=async()=>{try{const response=await fetch('https://restcountries.com/v3.1/all');const data=await response.json();console.log('Data from API:',data);setCountries(data);}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);const filteredCountries=countries.filter(country=>{const matchesRegion=selectedRegion&&selectedRegion!=='all'?country.region===selectedRegion:true;const matchesSearchCountry=country.name.common.toLowerCase().includes(searchCountry.toLowerCase());return matchesRegion&&matchesSearchCountry;});return/*#__PURE__*/_jsx(\"div\",{className:\"country-card\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"country-grid\",children:filteredCountries.map(country=>/*#__PURE__*/_jsx(Link,{className:\"text\",to:\"/country/\".concat(encodeURIComponent(country.name.common),\" \"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"countryItem \".concat(isDarkMode?'dark':'light'),children:[/*#__PURE__*/_jsx(\"img\",{src:country.flags.png,alt:\"Flag\",className:\"countryImg\"}),/*#__PURE__*/_jsx(\"li\",{id:\"country-name\",children:country.name.common}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Population: \"}),country.population.toLocaleString()]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Region:\"}),\" \",country.region]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Capital: \"}),country.capital]})]},country.capital)},country.name.common))})});};export default CountryList;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","CountryList","_ref","isDarkMode","selectedRegion","searchCountry","countries","setCountries","fetchData","response","fetch","data","json","console","log","error","filteredCountries","filter","country","matchesRegion","region","matchesSearchCountry","name","common","toLowerCase","includes","className","children","map","to","concat","encodeURIComponent","src","flags","png","alt","id","population","toLocaleString","capital"],"sources":["C:/Users/Amen Gezoh/Desktop/rest-countries-api-with-color-theme-switcher/rest-countries-api-with-color-theme-switcher/src/components/countriesList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n export interface Country {\r\n    name: {\r\n    common: string;\r\n    nativeName: {\r\n      [key: string]: {\r\n        official: string;\r\n        common: string;\r\n      };\r\n    };\r\n   \r\n  };\r\n\r\n        flags: {\r\n            svg: string;\r\n            png: string;\r\n          };\r\n       \r\n        population: number;\r\n        region: string;\r\n        capital: string;\r\n        subregion: string;\r\n        borders: string[];\r\n        tld: string;\r\n        languages: {\r\n          [key: string]: string;\r\n        };\r\n        currencies: {\r\n          [key: string]: {\r\n            name: string;\r\n          \r\n          };\r\n        };\r\n       cca3: string;\r\n      \r\n }\r\n       \r\n      \r\n        \r\n        \r\n\r\n   \r\n\r\n      interface CountryListProps {\r\n        isDarkMode: boolean;\r\n        selectedRegion: string | null;\r\n        searchCountry: string;\r\n      \r\n        \r\n      \r\n      }\r\n      \r\n     \r\n      \r\n  const CountryList: React.FC<CountryListProps> = ({isDarkMode, selectedRegion,searchCountry}) => {\r\n    const [countries, setCountries] = useState<Country[]>([]);\r\n    \r\n  \r\n   \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://restcountries.com/v3.1/all');\r\n        const data = await response.json();\r\n        console.log('Data from API:', data);\r\n        setCountries(data);\r\n\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        \r\n\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  \r\n  const filteredCountries = countries.filter((country) => {\r\n    const matchesRegion = selectedRegion && selectedRegion !== 'all'\r\n      ? country.region === selectedRegion\r\n      : true;\r\n\r\n    const matchesSearchCountry = country.name.common.toLowerCase().includes(searchCountry.toLowerCase());\r\n\r\n    return matchesRegion && matchesSearchCountry;\r\n  });\r\n\r\n \r\n  \r\n\r\n\r\n  return (\r\n    \r\n        <div className='country-card'>\r\n          \r\n      <ul className='country-grid'>\r\n     \r\n            {filteredCountries.map((country) =>(\r\n              \r\n              <Link className='text' key={country.name.common} to={`/country/${encodeURIComponent(country.name.common)} `} >\r\n              <div key={country.capital }className={`countryItem ${isDarkMode ? 'dark' : 'light'}`}>\r\n            <img src={country.flags.png} alt=\"Flag\" className='countryImg'/>\r\n             <li id='country-name'>{country.name.common}</li>\r\n              <li><span>Population: </span>{country.population.toLocaleString()}</li>\r\n              <li><span>Region:</span> {country.region}</li>\r\n              <li><span>Capital: </span>{country.capital}</li>  \r\n              \r\n            </div> \r\n           </Link>\r\n        ))}\r\n      </ul>\r\n      </div>\r\n   \r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}