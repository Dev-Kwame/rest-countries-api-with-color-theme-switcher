{"ast":null,"code":"import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import React,{useState,useEffect}from\"react\";import NavBar from\"./components/navBar\";import'./App.css';import SearchBar from\"./components/searchbar\";import ToggleButton from\"./components/button\";import DropDown from\"./components/dropDown\";import CountryList from\"./components/countriesList\";import CountryDetails from'./components/countriesDetails';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[isDarkMode,setIsDarkMode]=useState(false);const[selectedRegion,setSelectedRegion]=useState(null);const[searchCountry,setSearchCountry]=useState('');const[countries,setCountries]=useState([]);useEffect(()=>{const fetchData=async()=>{try{const response=await fetch('https://restcountries.com/v3.1/all');const data=await response.json();setCountries(data);}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);useEffect(()=>{document.body.className=isDarkMode?'dark-theme':'light-theme';},[isDarkMode]);const toggleTheme=()=>{setIsDarkMode(!isDarkMode);};const handleRegionSelect=region=>{setSelectedRegion(region);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(isDarkMode?'dark':'light'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"navigate\",children:/*#__PURE__*/_jsx(NavBar,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"click-button\",children:/*#__PURE__*/_jsx(ToggleButton,{isDarkMode:isDarkMode,onToggle:toggleTheme})})]}),/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(SearchBar,{isDarkMode:isDarkMode,onSearch:setSearchCountry})}),/*#__PURE__*/_jsx(\"div\",{className:\"dropdown-flex\",children:/*#__PURE__*/_jsx(DropDown,{isDarkMode:isDarkMode,onRegionSelect:handleRegionSelect})})]}),/*#__PURE__*/_jsx(CountryList,{isDarkMode:isDarkMode,selectedRegion:selectedRegion,searchCountry:searchCountry,countries:countries})]})}),/*#__PURE__*/_jsx(Route,{path:\"/country/:countryName\",element:/*#__PURE__*/_jsx(CountryDetails,{isDarkMode:isDarkMode,countries:countries})})]})})]});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","React","useState","useEffect","NavBar","SearchBar","ToggleButton","DropDown","CountryList","CountryDetails","jsx","_jsx","jsxs","_jsxs","App","isDarkMode","setIsDarkMode","selectedRegion","setSelectedRegion","searchCountry","setSearchCountry","countries","setCountries","fetchData","response","fetch","data","json","error","console","document","body","className","toggleTheme","handleRegionSelect","region","concat","children","onToggle","path","element","onSearch","onRegionSelect"],"sources":["C:/Users/Amen Gezoh/Desktop/rest-countries-api-with-color-theme-switcher/rest-countries-api-with-color-theme-switcher/src/App.tsx"],"sourcesContent":["\nimport {BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React, {useState, useEffect} from \"react\";\nimport NavBar from \"./components/navBar\";\nimport './App.css';\nimport SearchBar from \"./components/searchbar\";\nimport ToggleButton from \"./components/button\";\nimport DropDown from \"./components/dropDown\";\nimport CountryList from \"./components/countriesList\";\nimport CountryDetails from './components/countriesDetails';\n\n\n\n\n\nexport interface Country {\n  name: {\n  common: string;\n  nativeName: {\n    [key: string]: {\n      official: string;\n      common: string;\n    };\n  };\n \n};\n\n      flags: {\n          svg: string;\n          png: string;\n        };\n     \n      population: number;\n      region: string;\n      capital: string;\n      subregion: string;\n      borders: string[];\n      tld: string;\n      languages: {\n        [key: string]: string;\n      };\n      currencies: {\n        [key: string]: {\n          name: string;\n        \n        };\n      };\n      cca3: string;\n      \n      \n     \n    \n}\n\n\n\nfunction App () {\n    const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\n    const [selectedRegion, setSelectedRegion] = useState<string | null>(null);\n    const [searchCountry, setSearchCountry] = useState<string>('');\n    const [countries, setCountries] = useState<Country[]>([]);\n    \n \n\n  \n\n   \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        const data = await response.json();\n     \n        setCountries(data);\n      \n    \n        \n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n      \n    };\n\n    fetchData();\n  }, []);\n\n\n\n\n\n\n \n\n    useEffect(() => {\n      document.body.className = isDarkMode ? 'dark-theme' : 'light-theme';\n    }, [isDarkMode]);\n\n    const toggleTheme  = () => {\n      setIsDarkMode(!isDarkMode);\n    };\n\n    const handleRegionSelect = (region: string | null) => {\n      setSelectedRegion(region);\n    };   \n\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}> \n    <div className='header'>\n    <div className=\"navigate\"><NavBar/></div>\n    <div className=\"click-button\"><ToggleButton isDarkMode={isDarkMode} onToggle={toggleTheme}/></div> \n    </div>\n\n    <Router>\n        <Routes>\n          <Route path='/' element={\n            <div>\n              <div className=\"flex\">\n                <div>\n                  <SearchBar isDarkMode={isDarkMode} onSearch={setSearchCountry} />\n                </div>\n                <div className=\"dropdown-flex\">\n                  <DropDown isDarkMode={isDarkMode} onRegionSelect={handleRegionSelect} />\n                </div>\n              </div>\n            \n              <CountryList isDarkMode={isDarkMode} selectedRegion={selectedRegion} searchCountry={searchCountry}  countries={countries}/>\n              \n            </div>\n          } />\n          <Route path='/country/:countryName' element={<CountryDetails isDarkMode={isDarkMode}  countries={countries}/> } />\n        </Routes>\n      </Router>\n     </div>\n     \n    \n   \n\n  \n   \n  );\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}