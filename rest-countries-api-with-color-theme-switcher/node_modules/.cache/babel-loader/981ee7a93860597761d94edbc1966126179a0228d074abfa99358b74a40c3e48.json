{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amen Gezoh\\\\Desktop\\\\rest-countries-api-with-color-theme-switcher\\\\rest-countries-api-with-color-theme-switcher\\\\src\\\\components\\\\countriesDetails.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDetails = ({\n  isDarkMode,\n  countries\n}) => {\n  _s();\n  const {\n    countryName\n  } = useParams();\n  // Find the selected country based on 'countryName'\n  const selectedCountry = countries.find(country => country.name.common === decodeURIComponent(countryName));\n  if (!selectedCountry) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Country not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryDetails, \"AhPURtdEQc4QZIMMhFdbARalV9k=\", false, function () {\n  return [useParams];\n});\n_c = CountryDetails;\nexport default CountryDetails;\nvar _c;\n$RefreshReg$(_c, \"CountryDetails\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","CountryDetails","isDarkMode","countries","_s","countryName","selectedCountry","find","country","name","common","decodeURIComponent","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Amen Gezoh/Desktop/rest-countries-api-with-color-theme-switcher/rest-countries-api-with-color-theme-switcher/src/components/countriesDetails.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Country } from '../App';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface CountryDetailsprops{ \r\n  isDarkMode: boolean;\r\n  countries: Country[];\r\n\r\n \r\n\r\n}\r\n\r\n\r\n\r\nconst CountryDetails: React.FC<CountryDetailsprops> = ({isDarkMode, countries}) => {\r\n  const { countryName } = useParams<{ countryName: string }>();\r\n   // Find the selected country based on 'countryName'\r\n   const selectedCountry = countries.find((country) => country.name.common === decodeURIComponent(countryName));\r\n\r\n   if (!selectedCountry) {\r\n     return <div>Country not found</div>;\r\n   }\r\n\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n    \r\n\r\n\r\n    </div>\r\n  )\r\n \r\n    \r\n\r\n};\r\n\r\nexport default CountryDetails;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuB7C,MAAMC,cAA6C,GAAGA,CAAC;EAACC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM;IAAEC;EAAY,CAAC,GAAGP,SAAS,CAA0B,CAAC;EAC3D;EACA,MAAMQ,eAAe,GAAGH,SAAS,CAACI,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,MAAM,KAAKC,kBAAkB,CAACN,WAAW,CAAC,CAAC;EAE5G,IAAI,CAACC,eAAe,EAAE;IACpB,oBAAON,OAAA;MAAAY,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EAKD,oBACEhB,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIK,CAAC;AAKV,CAAC;AAACZ,EAAA,CAtBIH,cAA6C;EAAA,QACzBH,SAAS;AAAA;AAAAmB,EAAA,GAD7BhB,cAA6C;AAwBnD,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}